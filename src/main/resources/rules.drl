package org.example;

import java.util.List;
import java.util.*
import java.util.stream.Collectors;
import arthurs_pet_med.med_prescription.dto.SpecialtyDto;
import arthurs_pet_med.med_prescription.entity.drools.Specialty
import arthurs_pet_med.med_prescription.entity.drools.Gastroenterologist
import arthurs_pet_med.med_prescription.entity.drools.Ophthalmologist
import arthurs_pet_med.med_prescription.entity.drools.Orthodontist

global java.util.Set controlSet;
global java.util.List usersSymptomList;
global SpecialtyDto specialtyDto;
global java.lang.String usersSymptom

rule "OphthalmologistSpecialty"
when
    $op : Ophthalmologist()
then
    $op.getSymptoms().retainAll(usersSymptomList);
end

rule "OrthodontistSpecialty"
when
    $or : Orthodontist()
then
    $or.getSymptoms().retainAll(usersSymptomList);
end

rule "GastroenterologistSpecialty"
when
   $ga : Gastroenterologist()
   then
    $ga.getSymptoms().retainAll(usersSymptomList);
end

rule "CompareRightDoc"
when
    $op : Ophthalmologist()
    $ga : Gastroenterologist()
    $or : Orthodontist()
    $docs : List()
   then
   List<Specialty> docs = new ArrayList<>(List.of($op, $ga, $or));
   int maxValue = docs.stream()
            .map(Specialty::getSymptoms)
            .mapToInt(List::size)
            .max().orElse(0);

    String doctorSpecialty = docs.stream()
                 .filter(doc -> doc.getSymptoms().size() == maxValue)
                 .map(Specialty::getSpecialty)
                 .findFirst().orElse("Therapist");

    Long numberOfIdenticalSymptoms = docs.stream()
                  .filter(doc -> doc.getSymptoms().size() == maxValue)
                  .count();

   if(numberOfIdenticalSymptoms > 1) {
        specialtyDto.setSpecialty("Therapist");
   } else {
        specialtyDto.setSpecialty(doctorSpecialty);
   }
end